{"ast":null,"code":"var _jsxFileName = \"/Users/patrickciongoli/Desktop/03-coding/Business/eclatir/eclatir-diamond-ecommerce/src/components/DiamondList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DiamondCustomizer from \"./DiamondCustomizer\";\nimport \"../styles/DiamondList.css\";\nimport \"../styles/ProductList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  diamonds: [],\n  isLoading: true,\n  error: null\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        diamonds: action.payload\n      };\n    case \"FETCH_ERROR\":\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst DiamondList = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [customOptions, setCustomOptions] = useState(null);\n  const {\n    shape\n  } = useParams();\n  const handleCustomize = options => {\n    setCustomOptions(options);\n  };\n  useEffect(() => {\n    const fetchDiamonds = async () => {\n      try {\n        let apiUrl = \"/api/diamonds\";\n        if (shape) {\n          apiUrl = `/api/diamonds/shape/${shape}`;\n        }\n\n        // Add custom options to the API URL\n        if (customOptions) {\n          const params = new URLSearchParams(customOptions).toString();\n          apiUrl += `?${params}`;\n        }\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_ERROR\",\n          payload: error.message\n        });\n      }\n    };\n    fetchDiamonds();\n  }, [shape, customOptions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DiamondCustomizer, {\n      onFilter: handleCustomize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"product-list\",\n      children: state.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this) : state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }, this) : state.diamonds.map(diamond => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"product-item\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/product/diamonds/${diamond._id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: diamond.image,\n            alt: `${diamond.type} diamond`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: diamond.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [diamond.carat, \" carats - \", diamond.cut, \" cut -\", \" \", diamond.color, \" color - \", diamond.clarity, \" clarity - $\", diamond.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this)]\n      }, diamond._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_s(DiamondList, \"POPS2OihwOKuxKW4ki0eqlSQi60=\", false, function () {\n  return [useParams];\n});\n_c = DiamondList;\nexport default DiamondList;\nvar _c;\n$RefreshReg$(_c, \"DiamondList\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","useParams","Link","DiamondCustomizer","jsxDEV","_jsxDEV","initialState","diamonds","isLoading","error","reducer","state","action","type","payload","DiamondList","_s","dispatch","customOptions","setCustomOptions","shape","handleCustomize","options","fetchDiamonds","apiUrl","params","URLSearchParams","toString","response","fetch","ok","Error","data","json","message","children","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","className","map","diamond","to","_id","src","image","alt","carat","cut","color","clarity","price","_c","$RefreshReg$"],"sources":["/Users/patrickciongoli/Desktop/03-coding/Business/eclatir/eclatir-diamond-ecommerce/src/components/DiamondList.js"],"sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport DiamondCustomizer from \"./DiamondCustomizer\";\nimport \"../styles/DiamondList.css\";\nimport \"../styles/ProductList.css\";\n\nconst initialState = {\n   diamonds: [],\n   isLoading: true,\n   error: null,\n};\n\nconst reducer = (state, action) => {\n   switch (action.type) {\n      case \"FETCH_SUCCESS\":\n         return {\n            ...state,\n            isLoading: false,\n            diamonds: action.payload,\n         };\n      case \"FETCH_ERROR\":\n         return {\n            ...state,\n            isLoading: false,\n            error: action.payload,\n         };\n      default:\n         return state;\n   }\n};\n\nconst DiamondList = () => {\n   const [state, dispatch] = useReducer(reducer, initialState);\n   const [customOptions, setCustomOptions] = useState(null);\n   const { shape } = useParams();\n\n   const handleCustomize = (options) => {\n      setCustomOptions(options);\n   };\n\n   useEffect(() => {\n      const fetchDiamonds = async () => {\n         try {\n            let apiUrl = \"/api/diamonds\";\n            if (shape) {\n               apiUrl = `/api/diamonds/shape/${shape}`;\n            }\n\n            // Add custom options to the API URL\n            if (customOptions) {\n               const params = new URLSearchParams(customOptions).toString();\n               apiUrl += `?${params}`;\n            }\n\n            const response = await fetch(apiUrl);\n\n            if (!response.ok) {\n               throw new Error(\"Network response was not ok\");\n            }\n\n            const data = await response.json();\n            dispatch({ type: \"FETCH_SUCCESS\", payload: data });\n         } catch (error) {\n            dispatch({ type: \"FETCH_ERROR\", payload: error.message });\n         }\n      };\n\n      fetchDiamonds();\n   }, [shape, customOptions]);\n\n   return (\n      <div>\n         <DiamondCustomizer onFilter={handleCustomize} />\n\n         <ul className=\"product-list\">\n            {state.isLoading ? (\n               <p>Loading...</p>\n            ) : state.error ? (\n               <p>Error: {state.error}</p>\n            ) : (\n               state.diamonds.map((diamond) => (\n                  <li key={diamond._id} className=\"product-item\">\n                     <Link to={`/product/diamonds/${diamond._id}`}>\n                        <img\n                           src={diamond.image}\n                           alt={`${diamond.type} diamond`}\n                        />\n                        <h4>{diamond.type}</h4>\n                     </Link>\n                     <p>\n                        {diamond.carat} carats - {diamond.cut} cut -{\" \"}\n                        {diamond.color} color - {diamond.clarity} clarity - $\n                        {diamond.price}\n                     </p>\n                  </li>\n               ))\n            )}\n         </ul>\n      </div>\n   );\n};\n\nexport default DiamondList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}